{"ast":null,"code":"import axios from \"axios\";\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\n  withCredentials: true,\n  // Important for session-based auth\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to: ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Unauthorized - redirect to login\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\n\n// API methods\nexport const authAPI = {\n  login: credentials => api.post(\"/auth/login\", credentials),\n  register: userData => api.post(\"/auth/register\", userData),\n  logout: () => api.post(\"/auth/logout\"),\n  getMe: () => api.get(\"/auth/me\")\n};\nexport const eventsAPI = {\n  getAll: () => api.get(\"/events\"),\n  getById: id => api.get(`/events/${id}`),\n  create: eventData => api.post(\"/events\", eventData),\n  update: (id, eventData) => api.put(`/events/${id}`, eventData),\n  delete: id => api.delete(`/events/${id}`)\n};\nexport const ticketsAPI = {\n  purchase: eventId => api.post(`/tickets/purchase/${eventId}`),\n  getMyTickets: () => api.get(\"/tickets/my-tickets\")\n};\nexport const adminAPI = {\n  getSubAdmins: () => api.get(\"/admin/sub-admins\"),\n  createSubAdmin: userData => api.post(\"/admin/sub-admins\", userData),\n  updateSubAdmin: (id, userData) => api.put(`/admin/sub-admins/${id}`, userData),\n  deleteSubAdmin: id => api.delete(`/admin/sub-admins/${id}`),\n  getClients: () => api.get(\"/admin/clients\"),\n  deleteClient: id => api.delete(`/admin/clients/${id}`),\n  getReports: format => api.get(`/admin/reports/${format}`, {\n    responseType: \"blob\"\n  }),\n  getDashboardStats: () => api.get(\"/admin/dashboard/stats\")\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","status","window","location","href","authAPI","login","credentials","post","register","userData","logout","getMe","get","eventsAPI","getAll","getById","id","eventData","update","put","delete","ticketsAPI","purchase","eventId","getMyTickets","adminAPI","getSubAdmins","createSubAdmin","updateSubAdmin","deleteSubAdmin","getClients","deleteClient","getReports","format","responseType","getDashboardStats"],"sources":["/home/nuru/Desktop/Event Organising System/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\n  withCredentials: true, // Important for session-based auth\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log(\n      `Making ${config.method?.toUpperCase()} request to: ${config.url}`\n    );\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Unauthorized - redirect to login\n      window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API methods\nexport const authAPI = {\n  login: (credentials) => api.post(\"/auth/login\", credentials),\n  register: (userData) => api.post(\"/auth/register\", userData),\n  logout: () => api.post(\"/auth/logout\"),\n  getMe: () => api.get(\"/auth/me\"),\n};\n\nexport const eventsAPI = {\n  getAll: () => api.get(\"/events\"),\n  getById: (id) => api.get(`/events/${id}`),\n  create: (eventData) => api.post(\"/events\", eventData),\n  update: (id, eventData) => api.put(`/events/${id}`, eventData),\n  delete: (id) => api.delete(`/events/${id}`),\n};\n\nexport const ticketsAPI = {\n  purchase: (eventId) => api.post(`/tickets/purchase/${eventId}`),\n  getMyTickets: () => api.get(\"/tickets/my-tickets\"),\n};\n\nexport const adminAPI = {\n  getSubAdmins: () => api.get(\"/admin/sub-admins\"),\n  createSubAdmin: (userData) => api.post(\"/admin/sub-admins\", userData),\n  updateSubAdmin: (id, userData) =>\n    api.put(`/admin/sub-admins/${id}`, userData),\n  deleteSubAdmin: (id) => api.delete(`/admin/sub-admins/${id}`),\n  getClients: () => api.get(\"/admin/clients\"),\n  deleteClient: (id) => api.delete(`/admin/clients/${id}`),\n  getReports: (format) =>\n    api.get(`/admin/reports/${format}`, { responseType: \"blob\" }),\n  getDashboardStats: () => api.get(\"/admin/dashboard/stats\"),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}